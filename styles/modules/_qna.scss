@use '../base/mixins/index' as *;
@use '../base/variables/index' as *;

@mixin create-qna {
  .qna {
    position: relative;
    background-image: url(/dist/images/backgrounds/sticker.svg);
    background-repeat: no-repeat;
    background-position: var(--qna_bg-pos-x, 90%) 50%;
    background-size: var(--qna_background-size, 25%);
    background-attachment: fixed;

    @include mq-responsive('tablet', max) {
      --qna_background-size: 40%;
    }

    @include mq-responsive('mobile-l', max) {
      --qna_background-size: 70%;
      --qna_bg-pos-x: 60%;
    }

    .container {
      @include flex-set(flex, column, nowrap, var(--qna_gap, clamp($gap-xl, 5dvb, $gap-3xl)));
    }

    &__item {
      --question_gap: clamp(#{$gap-m}, 2.5dvi, #{$gap-xl});
      --question-number_size: clamp(#{$gap-xl}, 5dvi, #{$gap-3xl});
      --question-number_font-size: clamp(#{$gap-xl}, .5em, #{$gap-3xl});
      --question-number_bg-color: #{$color-secondary};
      --question-content_pad-left: calc(var(--question_gap) + var(--question-number_size));
      counter-increment: questions;

      @include mq-responsive('tablet', max) {
        --question-number_size: clamp(#{$gap-xl}, 4dvi, #{$gap-3xl});
        --question-number_font-size: clamp(#{$gap-l}, 1em, #{$gap-2xl});
      }

      &[open] {
        --question-number_bg-color: #{$color-primary};
      }

      >p {
        padding-inline-start: var(--question-content_pad-left);
        font-weight: 300;
        line-height: 1.7;
      }

      >summary {
        --qna-question_text-decoration: none;
        --qna-number_box-shadow-radius: 0;

        @include flex-set(flex, row, nowrap, var(--question_gap), center);
        font-family: var(--font-title);
        font-size: clamp($gap-l, var(--qna-question_font-size, 4dvb), $gap-2xl);
        cursor: pointer;

        @include mq-hover {
          --qna-question_text-decoration: underline;
          --qna-number_box-shadow-radius: #{$gap-m};
        }

        @include mq-responsive('tablet', max) {
          --qna-question_font-size: 4dvi;
        }

        &::marker {
          display: none;
          color: $color-transparent;
          visibility: hidden;
        }

        &:before {
          @include border-radius(circle);
          @include box-shadow-set(var(--qna-number_box-shadow-radius), 0, 0, var(--question-number_bg-color));
          display: inline-grid;
          content: counter(questions);
          place-items: center;
          block-size: clamp($gap-xl, var(--question-number_size), $gap-3xl);
          aspect-ratio: 1;
          background-color: var(--question-number_bg-color);
          font-family: var(--font-text);
          font-size: var(--question-number_font-size);
          font-weight: 300;
          line-height: 1;
          color: $color-white;
          text-align: center;
          text-decoration: none;
          transition: box-shadow var(--trans-time) var(--trans-fnc), background-color var(--trans-time) var(--trans-fnc);

          @include mq-responsive('mobile-l', max) {
            font-size: 1.5rem;
          }
        }

        >span {
          text-decoration: var(--qna-question_text-decoration);
        }
      }
    }
  }
}