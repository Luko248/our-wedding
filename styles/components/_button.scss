@use '../base/mixins/index' as *;
@use '../base/variables/index' as *;

@mixin create-button {

    .button {
        --shadow-alpha: .3;
        --button-min-width: 15rem;
        --button-border-width: #{$gap-xs};
        --button-background: var(--color-secondary--bg);
        --button-color: #{$color-white};
        --button-border-color: #{$color-secondary--trans};
        --button-padding: clamp(#{$gap-m}, .4dvb, #{$gap-l}) clamp(#{$gap-m}, 2.5dvb, #{$gap-xl});
        --button-font-size: clamp(#{$gap-s}, 1em, #{$gap-l});
        --button-cursor: pointer;
        --button-outline: none;

        &--secondary {
            --button-color: #{$color-white};
            --button-border-color: #{$color-secondary};
            --button-background: #{$color-secondary};
        }
    }

    .button {
        @include border-radius(full);
        @include border-set-all(var(--button-border-width), solid, var(--button-border-color));
        display: inline-flex;
        flex-flow: row nowrap;
        align-items: center;
        justify-content: center;
        width: auto;
        min-width: var(--button-min-width);
        gap: $gap-m;
        padding: var(--button-padding);
        background-color: var(--button-background);
        font-family: var(--font-text);
        font-size: var(--button-font-size);
        font-weight: 300;
        letter-spacing: 2.5px;
        color: var(--button-color);
        text-align: center;
        text-decoration: none;
        transition: background-color $trans-time ease-in-out;
        cursor: pointer;
        backdrop-filter: blur($gap-s);

        &:focus:not(:focus-visible) {
            outline: var(--button-outline);
        }

        @include mq-hover {
            --button-background: var(--color-secondary--hover);
            --button-border-color: #{$color-secondary};

        }

        >.icon {
            --icon-size: 1.2em;
            fill: var(--button-color);
        }
    }
}