{
  "version": 3,
  "sources": ["../../scripts/_nav.ts", "../../scripts/init.ts"],
  "sourcesContent": ["export const initNav = () => {\r\n    const body = document.body as HTMLBodyElement\r\n    const nav = document.querySelector('nav') as HTMLButtonElement\r\n    const scrollWatcher = document.createElement('div')\r\n\r\n    scrollWatcher.setAttribute('data-scroll-watcher', '')\r\n    nav.before(scrollWatcher)\r\n\r\n    const navObserver = new IntersectionObserver((entries) => {\r\n        nav.classList.toggle('sticked', !entries[0].isIntersecting)\r\n    }, {rootMargin: '100% 0px 0px 0px'})\r\n\r\n    navObserver.observe(scrollWatcher)\r\n\r\n    const menuBtn = document.getElementById('menuBtn') as HTMLButtonElement\r\n    const menu = document.querySelector('nav ul') as HTMLButtonElement\r\n    \r\n    menuBtn.addEventListener('click', () => {\r\n        menuBtn.classList.toggle('burger--open')\r\n        menu.classList.toggle('open')\r\n    })\r\n}", "\uFEFF// /// <reference path=\"../../node_modules/@types/googlemaps/index.d.ts\" />\r\nimport { initNav } from \"./_nav\";\r\n// import { initSeatingPlan } from \"./_seatingPlan\";\r\n\r\n\r\n// declare global {\r\n//     interface Window {\r\n//         initMap: () => void;\r\n//     }\r\n// }\r\n\r\nfunction initMap(): void {\r\n    let mapElement = document.getElementById('mapElem') as HTMLDivElement\r\n    var centerPosition;\r\n    const mobileCenterPosition = { lat: 49.415000, lng: 18.570000 }\r\n    const laptopCenterPosition = { lat: 49.412290, lng: 18.572500 }\r\n    const desktopCenterPosition = { lat: 49.412290, lng: 18.574300 }\r\n\r\n    if (window.innerWidth < 768) {\r\n        centerPosition = mobileCenterPosition\r\n    }\r\n\r\n    else if (window.innerWidth >= 768 && window.innerWidth < 1200) {\r\n        centerPosition = laptopCenterPosition\r\n    }\r\n\r\n    else{\r\n        centerPosition = desktopCenterPosition\r\n    }\r\n\r\n    const map = new google.maps.Map(\r\n        mapElement,\r\n        {\r\n            zoom: 17,\r\n            center: centerPosition,\r\n            mapId: '1406e53bf9ae68ff',\r\n            disableDefaultUI: true,\r\n            options: {\r\n                gestureHandling: 'cooperative',\r\n            }\r\n        }\r\n    );\r\n\r\n    const iconsUrl = \"/dist/images/map-icons/\";\r\n\r\n    const markers: Record<string, { icon: string }> = {\r\n        main: {\r\n            icon: iconsUrl + \"marker.svg\",\r\n        }\r\n    };\r\n\r\n    const positions = [\r\n        {\r\n            position: new google.maps.LatLng(49.412402, 18.569880),\r\n            type: \"main\",\r\n            title: \"Penzi\u00F3n Kriv\u00E1\u0148\",\r\n        }\r\n    ];\r\n\r\n    const infoWindow = new google.maps.InfoWindow({\r\n        content: '<div class=\"map__widnow\"><strong>Penzi\u00F3n Kriv\u00E1\u0148<strong><br><span>Lucie & Luk\u00E1\u0161 Svatba</span></div>',\r\n        ariaLabel: \"Penzi\u00F3n Kriv\u00E1\u0148\",\r\n    });\r\n\r\n    for (let i = 0; i < positions.length; i++) {\r\n        const marker = new google.maps.Marker({\r\n            position: positions[i].position,\r\n            icon: markers[positions[i].type].icon,\r\n            map: map,\r\n        });\r\n\r\n        marker.addListener(\"click\", () => {\r\n            infoWindow.open({\r\n                anchor: marker,\r\n                map,\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\ninitMap()\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    initNav()\r\n    // initSeatingPlan()\r\n})"],
  "mappings": "AAAO,IAAMA,EAAU,IAAM,CACzB,IAAMC,EAAO,SAAS,KAChBC,EAAM,SAAS,cAAc,KAAK,EAClCC,EAAgB,SAAS,cAAc,KAAK,EAElDA,EAAc,aAAa,sBAAuB,EAAE,EACpDD,EAAI,OAAOC,CAAa,EAEJ,IAAI,qBAAsBC,GAAY,CACtDF,EAAI,UAAU,OAAO,UAAW,CAACE,EAAQ,CAAC,EAAE,cAAc,CAC9D,EAAG,CAAC,WAAY,kBAAkB,CAAC,EAEvB,QAAQD,CAAa,EAEjC,IAAME,EAAU,SAAS,eAAe,SAAS,EAC3CC,EAAO,SAAS,cAAc,QAAQ,EAE5CD,EAAQ,iBAAiB,QAAS,IAAM,CACpCA,EAAQ,UAAU,OAAO,cAAc,EACvCC,EAAK,UAAU,OAAO,MAAM,CAChC,CAAC,CACL,ECVA,SAASC,GAAgB,CACrB,IAAIC,EAAa,SAAS,eAAe,SAAS,EAClD,IAAIC,EACJ,IAAMC,EAAuB,CAAE,IAAK,OAAW,IAAK,KAAU,EACxDC,EAAuB,CAAE,IAAK,SAAW,IAAK,OAAU,EACxDC,EAAwB,CAAE,IAAK,SAAW,IAAK,OAAU,EAE3D,OAAO,WAAa,IACpBH,EAAiBC,EAGZ,OAAO,YAAc,KAAO,OAAO,WAAa,KACrDD,EAAiBE,EAIjBF,EAAiBG,EAGrB,IAAMC,EAAM,IAAI,OAAO,KAAK,IACxBL,EACA,CACI,KAAM,GACN,OAAQC,EACR,MAAO,mBACP,iBAAkB,GAClB,QAAS,CACL,gBAAiB,aACrB,CACJ,CACJ,EAIMK,EAA4C,CAC9C,KAAM,CACF,KAJS,0BAIQ,YACrB,CACJ,EAEMC,EAAY,CACd,CACI,SAAU,IAAI,OAAO,KAAK,OAAO,UAAW,QAAS,EACrD,KAAM,OACN,MAAO,2BACX,CACJ,EAEMC,EAAa,IAAI,OAAO,KAAK,WAAW,CAC1C,QAAS,wHACT,UAAW,2BACf,CAAC,EAED,QAAS,EAAI,EAAG,EAAID,EAAU,OAAQ,IAAK,CACvC,IAAME,EAAS,IAAI,OAAO,KAAK,OAAO,CAClC,SAAUF,EAAU,CAAC,EAAE,SACvB,KAAMD,EAAQC,EAAU,CAAC,EAAE,IAAI,EAAE,KACjC,IAAKF,CACT,CAAC,EAEDI,EAAO,YAAY,QAAS,IAAM,CAC9BD,EAAW,KAAK,CACZ,OAAQC,EACR,IAAAJ,CACJ,CAAC,CACL,CAAC,EAET,CAEAN,EAAQ,EAER,SAAS,iBAAiB,mBAAoB,IAAM,CAChDW,EAAQ,CAEZ,CAAC",
  "names": ["initNav", "body", "nav", "scrollWatcher", "entries", "menuBtn", "menu", "initMap", "mapElement", "centerPosition", "mobileCenterPosition", "laptopCenterPosition", "desktopCenterPosition", "map", "markers", "positions", "infoWindow", "marker", "initNav"]
}
